// Generated by view binder compiler. Do not edit!
package com.example.autopunchapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.autopunchapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnRecordAction;

  @NonNull
  public final Button btnSetTime;

  @NonNull
  public final Button btnStartPunch;

  @NonNull
  public final RecyclerView rvPunchLog;

  @NonNull
  public final Spinner spinnerAppSelection;

  @NonNull
  public final TextView tvAuthor;

  @NonNull
  public final TextView tvPunchStatus;

  @NonNull
  public final TextView tvPunchTime;

  @NonNull
  public final TextView tvRecordStatus;

  @NonNull
  public final TextView tvVersion;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView, @NonNull Button btnRecordAction,
      @NonNull Button btnSetTime, @NonNull Button btnStartPunch, @NonNull RecyclerView rvPunchLog,
      @NonNull Spinner spinnerAppSelection, @NonNull TextView tvAuthor,
      @NonNull TextView tvPunchStatus, @NonNull TextView tvPunchTime,
      @NonNull TextView tvRecordStatus, @NonNull TextView tvVersion) {
    this.rootView = rootView;
    this.btnRecordAction = btnRecordAction;
    this.btnSetTime = btnSetTime;
    this.btnStartPunch = btnStartPunch;
    this.rvPunchLog = rvPunchLog;
    this.spinnerAppSelection = spinnerAppSelection;
    this.tvAuthor = tvAuthor;
    this.tvPunchStatus = tvPunchStatus;
    this.tvPunchTime = tvPunchTime;
    this.tvRecordStatus = tvRecordStatus;
    this.tvVersion = tvVersion;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_record_action;
      Button btnRecordAction = ViewBindings.findChildViewById(rootView, id);
      if (btnRecordAction == null) {
        break missingId;
      }

      id = R.id.btn_set_time;
      Button btnSetTime = ViewBindings.findChildViewById(rootView, id);
      if (btnSetTime == null) {
        break missingId;
      }

      id = R.id.btn_start_punch;
      Button btnStartPunch = ViewBindings.findChildViewById(rootView, id);
      if (btnStartPunch == null) {
        break missingId;
      }

      id = R.id.rv_punch_log;
      RecyclerView rvPunchLog = ViewBindings.findChildViewById(rootView, id);
      if (rvPunchLog == null) {
        break missingId;
      }

      id = R.id.spinner_app_selection;
      Spinner spinnerAppSelection = ViewBindings.findChildViewById(rootView, id);
      if (spinnerAppSelection == null) {
        break missingId;
      }

      id = R.id.tv_author;
      TextView tvAuthor = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthor == null) {
        break missingId;
      }

      id = R.id.tv_punch_status;
      TextView tvPunchStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvPunchStatus == null) {
        break missingId;
      }

      id = R.id.tv_punch_time;
      TextView tvPunchTime = ViewBindings.findChildViewById(rootView, id);
      if (tvPunchTime == null) {
        break missingId;
      }

      id = R.id.tv_record_status;
      TextView tvRecordStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvRecordStatus == null) {
        break missingId;
      }

      id = R.id.tv_version;
      TextView tvVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvVersion == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, btnRecordAction, btnSetTime,
          btnStartPunch, rvPunchLog, spinnerAppSelection, tvAuthor, tvPunchStatus, tvPunchTime,
          tvRecordStatus, tvVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
