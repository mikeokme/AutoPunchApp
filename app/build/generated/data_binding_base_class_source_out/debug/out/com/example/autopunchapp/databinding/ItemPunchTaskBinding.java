// Generated by view binder compiler. Do not edit!
package com.example.autopunchapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.autopunchapp.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPunchTaskBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDeleteTask;

  @NonNull
  public final Button btnEditTask;

  @NonNull
  public final SwitchMaterial switchTaskEnabled;

  @NonNull
  public final TextView tvTaskAppName;

  @NonNull
  public final TextView tvTaskInterval;

  @NonNull
  public final TextView tvTaskTimeRange;

  private ItemPunchTaskBinding(@NonNull CardView rootView, @NonNull Button btnDeleteTask,
      @NonNull Button btnEditTask, @NonNull SwitchMaterial switchTaskEnabled,
      @NonNull TextView tvTaskAppName, @NonNull TextView tvTaskInterval,
      @NonNull TextView tvTaskTimeRange) {
    this.rootView = rootView;
    this.btnDeleteTask = btnDeleteTask;
    this.btnEditTask = btnEditTask;
    this.switchTaskEnabled = switchTaskEnabled;
    this.tvTaskAppName = tvTaskAppName;
    this.tvTaskInterval = tvTaskInterval;
    this.tvTaskTimeRange = tvTaskTimeRange;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPunchTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPunchTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_punch_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPunchTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete_task;
      Button btnDeleteTask = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteTask == null) {
        break missingId;
      }

      id = R.id.btn_edit_task;
      Button btnEditTask = ViewBindings.findChildViewById(rootView, id);
      if (btnEditTask == null) {
        break missingId;
      }

      id = R.id.switch_task_enabled;
      SwitchMaterial switchTaskEnabled = ViewBindings.findChildViewById(rootView, id);
      if (switchTaskEnabled == null) {
        break missingId;
      }

      id = R.id.tv_task_app_name;
      TextView tvTaskAppName = ViewBindings.findChildViewById(rootView, id);
      if (tvTaskAppName == null) {
        break missingId;
      }

      id = R.id.tv_task_interval;
      TextView tvTaskInterval = ViewBindings.findChildViewById(rootView, id);
      if (tvTaskInterval == null) {
        break missingId;
      }

      id = R.id.tv_task_time_range;
      TextView tvTaskTimeRange = ViewBindings.findChildViewById(rootView, id);
      if (tvTaskTimeRange == null) {
        break missingId;
      }

      return new ItemPunchTaskBinding((CardView) rootView, btnDeleteTask, btnEditTask,
          switchTaskEnabled, tvTaskAppName, tvTaskInterval, tvTaskTimeRange);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
