// Generated by view binder compiler. Do not edit!
package com.example.autopunchapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.autopunchapp.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAppSelectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnCheckAccessibility;

  @NonNull
  public final Button btnConfirm;

  @NonNull
  public final Button btnSelectOtherApp;

  @NonNull
  public final TextInputEditText etSearchApp;

  @NonNull
  public final RecyclerView rvAppList;

  @NonNull
  public final RecyclerView rvApps;

  @NonNull
  public final TextView tvCurrentSelection;

  private FragmentAppSelectionBinding(@NonNull LinearLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnCheckAccessibility, @NonNull Button btnConfirm,
      @NonNull Button btnSelectOtherApp, @NonNull TextInputEditText etSearchApp,
      @NonNull RecyclerView rvAppList, @NonNull RecyclerView rvApps,
      @NonNull TextView tvCurrentSelection) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnCheckAccessibility = btnCheckAccessibility;
    this.btnConfirm = btnConfirm;
    this.btnSelectOtherApp = btnSelectOtherApp;
    this.etSearchApp = etSearchApp;
    this.rvAppList = rvAppList;
    this.rvApps = rvApps;
    this.tvCurrentSelection = tvCurrentSelection;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAppSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAppSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_app_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAppSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_check_accessibility;
      Button btnCheckAccessibility = ViewBindings.findChildViewById(rootView, id);
      if (btnCheckAccessibility == null) {
        break missingId;
      }

      id = R.id.btn_confirm;
      Button btnConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirm == null) {
        break missingId;
      }

      id = R.id.btn_select_other_app;
      Button btnSelectOtherApp = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectOtherApp == null) {
        break missingId;
      }

      id = R.id.et_search_app;
      TextInputEditText etSearchApp = ViewBindings.findChildViewById(rootView, id);
      if (etSearchApp == null) {
        break missingId;
      }

      id = R.id.rv_app_list;
      RecyclerView rvAppList = ViewBindings.findChildViewById(rootView, id);
      if (rvAppList == null) {
        break missingId;
      }

      id = R.id.rv_apps;
      RecyclerView rvApps = ViewBindings.findChildViewById(rootView, id);
      if (rvApps == null) {
        break missingId;
      }

      id = R.id.tv_current_selection;
      TextView tvCurrentSelection = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentSelection == null) {
        break missingId;
      }

      return new FragmentAppSelectionBinding((LinearLayout) rootView, btnCancel,
          btnCheckAccessibility, btnConfirm, btnSelectOtherApp, etSearchApp, rvAppList, rvApps,
          tvCurrentSelection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
